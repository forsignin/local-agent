"""add runtime and code execution tables

Revision ID: 710430ef378c
Revises: 477586c2d318
Create Date: 2025-03-07 05:55:00.922601+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '710430ef378c'
down_revision: Union[str, None] = '477586c2d318'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_code_executions_id', table_name='code_executions')
    op.drop_table('code_executions')
    op.drop_table('execution_logs')
    op.drop_table('agent_states')
    op.drop_index('ix_runtimes_id', table_name='runtimes')
    op.drop_table('runtimes')
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=1)
    op.create_table('runtimes',
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('is_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_runtimes_id', 'runtimes', ['id'], unique=False)
    op.create_table('agent_states',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('agent_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('task_id', sa.INTEGER(), nullable=True),
    sa.Column('state', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('execution_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('task_id', sa.INTEGER(), nullable=True),
    sa.Column('agent_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('action', sa.VARCHAR(length=100), nullable=False),
    sa.Column('result', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('code_executions',
    sa.Column('code', sa.TEXT(), nullable=False),
    sa.Column('runtime_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('output', sa.TEXT(), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.Column('duration', sa.FLOAT(), nullable=True),
    sa.Column('memory_usage', sa.FLOAT(), nullable=True),
    sa.Column('cpu_usage', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['runtime_id'], ['runtimes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_code_executions_id', 'code_executions', ['id'], unique=False)
    # ### end Alembic commands ###
